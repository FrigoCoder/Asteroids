apply from: 'common.gradle'
apply plugin: 'signing'
apply plugin: 'maven'

group = 'frigo'

mainClassName = 'frigo.asteroids.Game'
applicationDefaultJvmArgs += "-XX:+UseG1GC"
applicationDefaultJvmArgs += "-XX:MaxGCPauseMillis=10"
applicationDefaultJvmArgs += "-Dsun.java2d.opengl=True"
applicationDefaultJvmArgs += "-Dsun.java2d.d3d=false"

appletUrls = ["http://jogamp.org/deployment/jogamp-current/jar/gluegen-rt.jar", "http://jogamp.org/deployment/jogamp-current/jar/jogl-all.jar"]

configurations {
    gluegen
    gluegenNatives
    jogl
    joglNatives

    compile {
        extendsFrom gluegen
        extendsFrom gluegenNatives
        extendsFrom jogl
        extendsFrom joglNatives
    }

    noApplet {
        extendsFrom gluegen
        extendsFrom gluegenNatives
        extendsFrom jogl
        extendsFrom joglNatives
    }
}

dependencies {
    gluegen group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-android-armv6'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-linux-amd64'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-linux-armv6'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-linux-armv6hf'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-linux-i586'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-macosx-universal'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-solaris-amd64'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-solaris-i586'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-windows-amd64'
    gluegenNatives group: 'org.jogamp.gluegen', name: 'gluegen-rt', version: 'latest.release', classifier: 'natives-windows-i586'

    jogl group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-android-armv6'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-linux-amd64'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-linux-armv6'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-linux-armv6hf'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-linux-i586'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-macosx-universal'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-solaris-amd64'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-solaris-i586'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-windows-amd64'
    joglNatives group: 'org.jogamp.jogl', name: 'jogl-all', version: 'latest.release', classifier: 'natives-windows-i586'

    compile group: 'org.jogamp.joal', name: 'joal-main', version: 'latest.release'
    compile group: 'com.carrotsearch', name: 'hppc', version: 'latest.release'
}

task copyGluegenNatives (type: Copy) {
    from configurations.gluegenNatives.resolve()
    into configurations.gluegen.resolve().iterator().next().getParentFile().getAbsolutePath()
}

task copyJoglNatives (type: Copy) {
    from configurations.joglNatives.resolve()
    into configurations.jogl.resolve().iterator().next().getParentFile().getAbsolutePath();
}

eclipseClasspath {
    dependsOn copyGluegenNatives
    dependsOn copyJoglNatives
}

run {
    dependsOn copyGluegenNatives
    dependsOn copyJoglNatives
}

test {
    dependsOn copyGluegenNatives
    dependsOn copyJoglNatives
}

jar {
    manifest {
        attributes("Permissions": "all-permissions")
    }
}

jar << {
    ant.signjar(jar: tasks.jar.archivePath, alias:"asteroids", storepass:"asteroids", keystore:"/server/.keystore")
}

task copyAppletIndex (type: Copy) {
    from "$projectDir/src/applet/resources"
    into "$buildDir/resources/applet"
}

task modifyAppletIndex {
    dependsOn configurations.compile
    dependsOn copyAppletIndex
    File dir = file("$buildDir/resources/applet");
    outputs.dir dir;
    doLast {
        File index = new File(dir, "index.html");
        index.text = index.text.replaceAll("[\$][{]mainClassName[}]", mainClassName);
        index.text = index.text.replaceAll("[\$][{]applicationDefaultJvmArgs[}]", applicationDefaultJvmArgs.join(" ")); //" stupid notepad++ syntax highlighting

        Collection<String> libraries = new LinkedList<String>();
        appletUrls.each {
            libraries.add(it);
        }
        libraries.add("lib/" + project.name + "-" + project.version + ".jar");
        configurations.compile.resolve().each {
            libraries.add("lib/" + it.getName());
        }
        configurations.noApplet.resolve().each {
            libraries.remove("lib/" + it.getName());
        }
        index.text = index.text.replaceAll("[\$][{]libraries[}]", libraries.join(", ")); //" stupid notepad++ syntax higlighting
    }
}

applicationDistribution.from(modifyAppletIndex) {
    into ""
}
